name: Integration Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_call:

jobs:
  integration:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Install dependencies
      run: npm install
        
    - name: Run integration tests
      run: NODE_OPTIONS="--max-old-space-size=4096" npx jest --config app/tests/jest.integration.config.js --runInBand --forceExit
        
    - name: Test CLI functionality
      run: |
        node app/dist/src/cli.js --help
        node app/dist/src/cli.js --version
        timeout 3s node app/dist/src/cli.js --port 8001 || echo "CLI started successfully"
        
    - name: Production readiness check
      run: |
        echo "🔍 Running production readiness checks..."
        
        # Check if all required files exist
        echo "📁 Checking essential files..."
        test -f app/dist/src/cli.js || { echo "❌ CLI entry point missing"; exit 1; }
        test -f app/dist/src/index.js || { echo "❌ Server entry point missing"; exit 1; }
        test -f package.json || { echo "❌ package.json missing"; exit 1; }
        
        # Check package.json has required fields
        echo "📦 Validating package.json..."
        node -e "const pkg = require('./package.json'); 
        if (!pkg.bin) throw new Error('Missing bin field');
        if (!pkg.bin['claude-wrapper']) throw new Error('Missing claude-wrapper bin');
        if (!pkg.scripts.build) throw new Error('Missing build script');
        if (!pkg.scripts.test) throw new Error('Missing test script');
        console.log('✅ package.json validation passed');"
        
        # Test CLI can be executed
        echo "🖥️ Testing CLI execution..."
        node app/dist/src/cli.js --help > /dev/null || { echo "❌ CLI help failed"; exit 1; }
        
        # Test server starts and responds
        echo "🌐 Testing server startup..."
        timeout 10s bash -c '
        node app/dist/src/cli.js --port 8002 &
        SERVER_PID=$!
        sleep 3
        curl -f http://localhost:8002/health || { echo "❌ Health check failed"; kill $SERVER_PID 2>/dev/null; exit 1; }
        echo "✅ Server health check passed"
        kill $SERVER_PID 2>/dev/null
        ' || { echo "❌ Server startup test failed"; exit 1; }
        
        # Check for security vulnerabilities
        echo "🔒 Checking for security vulnerabilities..."
        npm audit --audit-level high || { echo "⚠️ High severity security vulnerabilities found"; exit 1; }
        
        echo "✅ All production readiness checks passed!"